# This file is a sample input.yml, input file for esp_generator.py
# The file name should be 'input.yml' and it should be located in the input directory with 'molecules' directory.
# Data structure:
# <input dir>/
# |----respyte.yml
# |----molecules/
#      |----<molecule name>/
#           |----conf1/
#                |----<molecule name>_conf1.pdb(or .mol2) 
#           |----conf2/
#                |----<molecule name>_conf2.pdb(or .mol2) 

# 1. molecules: list of molecule names  and the number of conformers for each molecule. 
# For example, if the user wants to generate espf data for 2 different molecules, mol1 and mol2 
# and have 5 conformers each, molecules should be given like below. 
# molecules : 
#     mol1 : 5
#     mol2 : 5
# (Each coordinate file should be either PDB or Mol2 file format and should be 
# located in molecules/<molecule name>/conf(j)/<molecule name>_conf(j).pdb(or .mol2) (j is integer)
molecules:
    meoh : 1

# 2. charges: the user should provide a net charge of each molecule. If not, it consider the molecule as neutral.
# if mol1 is neutral and mol2 has -1 charge, charges should be given like below:  
# charges :
#     mol1 :  0
#     mol2 : -1
charges :
    meoh : 0

# 3. settings: settings for grid point generation and Psi4 ESP calculation
settings :
    forcegen  : Y   # whether to force generating new grid.dat when grid.dat already exists.
    type      : msk # msk(default)/ extendedmsk/ fcc/ newfcc/ vdwfactors/ vdwconstants
    inner     : 1.4 # inter boundary of grid pts
    outer     : 2.0 # outer boundary of grid pts
    space     : 1.0 # grid density, the value is a shortest distance between the closest grid pts
    radii     : bondi # radii type, bondi or Alvarez
    method    : HF
    basis     : 6-31g*
    pcm       : N
    # solvent   : water

# Here's a short description of grid types  
#
# Type options: 
# (You mostly would choose either msk or newfcc.)
#  1. msk: msk with decaut space=1.0
#  2. extendedmsk: msk with default inner=0.8, outer=2.4, space=1.0
#  3. fcc: shellFacConst with default outer=1.0 
#  4. newfcc: shellFac with default inner=0.8, outer=2.4
#  5. vdwfactors: shellFac
#  6. vdwconstants: shellConst with default inner=0.4, outer=1.0
#
# Grid Type teminology:
#  * shellConst: the cutoffs are constants added to the vdw radius
#  * shellFac: the cutoffs are factors of the vdw radius
#  * shellFacConst: the inner cutoff is a factor of the vdw radius,
#    the outer cutoff is a constant added to the inner vdw radius
#    creating a vdw-based shell of constant thickness
#  * MSK: (Merz-Singh-Kollman) 4 shells: 1.4, 1.6, 1.8, 2.0 times vdW radius
